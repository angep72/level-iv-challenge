{
  "openapi": "3.0.0",
  "info": {
    "title": "Project EventBooker API",
    "version": "1.0.0",
    "description": "API documentation for Project EventBooker (auth, events, bookings)"
  },
  "servers": [
    { "url": "http://localhost:3000" }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" },
                  "password": { "type": "string" },
                  "firstName": { "type": "string" },
                  "lastName": { "type": "string" },
                  "role": { "type": "string", "enum": ["customer", "admin"] }
                },
                "required": ["email", "password", "firstName", "lastName"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "User registered successfully" },
          "400": { "description": "User already exists or validation error" }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login user and get JWT token",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Login successful" },
          "401": { "description": "Invalid credentials" }
        }
      }
    },
    "/events": {
      "get": {
        "summary": "Get all upcoming events",
        "tags": ["Events"],
        "responses": {
          "200": { "description": "List of events" }
        }
      },
      "post": {
        "summary": "Create a new event (admin only)",
        "tags": ["Events"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "date": { "type": "string", "format": "date-time" },
                  "location": { "type": "string" },
                  "maxCapacity": { "type": "integer" },
                  "price": { "type": "number" }
                },
                "required": ["title", "description", "date", "location", "maxCapacity", "price"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Event created successfully" },
          "400": { "description": "Validation error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/events/{id}": {
      "get": {
        "summary": "Get event by ID",
        "tags": ["Events"],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Event details" },
          "404": { "description": "Event not found" }
        }
      },
      "put": {
        "summary": "Update event (admin only)",
        "tags": ["Events"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "date": { "type": "string", "format": "date-time" },
                  "location": { "type": "string" },
                  "maxCapacity": { "type": "integer" },
                  "price": { "type": "number" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Event updated successfully" },
          "404": { "description": "Event not found" },
          "401": { "description": "Unauthorized" }
        }
      },
      "delete": {
        "summary": "Delete event (admin only)",
        "tags": ["Events"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Event deleted successfully" },
          "404": { "description": "Event not found" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/events/{id}/bookings": {
      "get": {
        "summary": "Get bookings for an event (admin only)",
        "tags": ["Events"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "List of bookings for the event" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/bookings": {
      "post": {
        "summary": "Create a new booking (customer/admin)",
        "tags": ["Bookings"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": { "type": "string" }
                },
                "required": ["eventId"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Booking created successfully" },
          "400": { "description": "Validation or business logic error" },
          "401": { "description": "Unauthorized" }
        }
      },
      "get": {
        "summary": "Get user's bookings (customer/admin)",
        "tags": ["Bookings"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "List of user's bookings" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/bookings/{id}": {
      "get": {
        "summary": "Get booking by ID (customer/admin)",
        "tags": ["Bookings"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Booking details" },
          "404": { "description": "Booking not found" },
          "401": { "description": "Unauthorized" }
        }
      },
      "put": {
        "summary": "Cancel a booking (customer/admin)",
        "tags": ["Bookings"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Booking cancelled successfully" },
          "404": { "description": "Booking not found or already cancelled" },
          "401": { "description": "Unauthorized" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
} 